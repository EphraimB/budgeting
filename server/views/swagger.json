{
    "openapi": "3.0.0",
    "info": {
        "title": "Budgeting",
        "description": "A budgeting app that generates future transactions based on expenses, loans, current balance, and income",
        "version": "0.1.0"
    },
    "servers": [
        {
            "url": "http://localhost:5001/api/",
            "description": "Development server"
        }
    ],
    "paths": {
        "/accounts": {
            "get": {
                "summary": "Get one account",
                "description": "Get one account",
                "tags": ["accounts"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Filter by account id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseAccounts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                }
            },
            "post": {
                "summary": "Create a new account",
                "description": "Create a new account",
                "tags": ["accounts"],
                "requestBody": {
                    "description": "Account object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseAccounts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/accounts/{id}": {
            "put": {
                "summary": "Update an account",
                "description": "Update an account",
                "tags": ["accounts"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Edit by account id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Account object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseAccounts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete an account",
                "description": "Delete an account",
                "tags": ["accounts"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Delete by account id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted account"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                }
            }
        },
        "/taxes": {
            "get": {
                "summary": "Get all taxes",
                "description": "Get all taxes",
                "tags": ["taxes"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Filter by tax id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Filter by account id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseTaxes"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Tax not found"
                    }
                }
            },
            "post": {
                "summary": "Create a new tax",
                "description": "Create a new tax",
                "tags": ["taxes"],
                "requestBody": {
                    "description": "Tax object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseTaxes"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/taxes/{id}": {
            "put": {
                "summary": "Update a tax",
                "description": "Update a tax",
                "tags": ["taxes"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Edit by tax id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Tax object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseTaxes"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Tax not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a tax",
                "description": "Delete a tax",
                "tags": ["taxes"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Delete by tax id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted tax"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Tax not found"
                    }
                }
            }
        },
        "/transactions/history": {
            "get": {
                "summary": "Get all transactions by account",
                "description": "Get all transactions by account",
                "tags": ["transaction history"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Filter by transaction id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Filter by account id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseTransactions"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                }
            },
            "post": {
                "summary": "Create a new transaction",
                "description": "Create a new transaction",
                "tags": ["transaction history"],
                "requestBody": {
                    "description": "transaction object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseTransactions"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/transactions/history/{id}": {
            "put": {
                "summary": "Update a transaction",
                "description": "Update a transaction",
                "tags": ["transaction history"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "transaction object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseTransactions"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a transaction",
                "description": "Delete a transaction",
                "tags": ["transaction history"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted transaction"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                }
            }
        },
        "/income": {
            "get": {
                "summary": "Get all income by account",
                "description": "Get all income by account",
                "tags": ["income"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Filter by income id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Filter by account id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseIncome"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Income not found"
                    }
                }
            },
            "post": {
                "summary": "Create a new income",
                "description": "Create a new income",
                "tags": ["income"],
                "requestBody": {
                    "description": "income object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseIncome"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/income/{id}": {
            "put": {
                "summary": "Update an income",
                "description": "Update an income",
                "tags": ["income"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "income id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "income object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseIncome"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Income not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete an income",
                "description": "Delete an income",
                "tags": ["income"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "income id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted income"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Income not found"
                    }
                }
            }
        },
        "/expenses": {
            "get": {
                "summary": "Get all expenses by account",
                "description": "Get all expenses by account",
                "tags": ["expenses"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Filter by expense id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Filter by account id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseExpenses"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Expense not found"
                    }
                }
            },
            "post": {
                "summary": "Create a new expense",
                "description": "Create a new expense",
                "tags": ["expenses"],
                "requestBody": {
                    "description": "Expenses object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseExpenses"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/expenses/{id}": {
            "put": {
                "summary": "Update an expense",
                "description": "Update an expense",
                "tags": ["expenses"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Expense id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Expenses object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseExpenses"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Expense not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete an expense",
                "description": "Delete an expense",
                "tags": ["expenses"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Expense id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expense deleted successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Expense not found"
                    }
                }
            }
        },
        "/expenses/commute": {
            "get": {
                "summary": "Get all commute expenses",
                "description": "Get all commute expenses",
                "tags": ["commute expenses overview"],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Filter by account id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseCommuteExpenses"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute expense not found"
                    }
                }
            }
        },
        "/expenses/commute/systems": {
            "get": {
                "summary": "Get all commute systems",
                "description": "Get all commute systems",
                "tags": ["commute systems"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Commute system id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseCommuteSystems"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute system not found"
                    }
                }
            },
            "post": {
                "summary": "Create a new commute system",
                "description": "Create a new commute system",
                "tags": ["commute systems"],
                "requestBody": {
                    "description": "Commute system object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommuteSystemManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseCommuteSystems"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/expenses/commute/systems/{id}": {
            "put": {
                "summary": "Update a commute system",
                "description": "Update a commute system",
                "tags": ["commute systems"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commute system id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Commute system object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommuteSystemManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseCommuteSystems"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute system not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a commute system",
                "description": "Delete a commute system",
                "tags": ["commute systems"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commute system id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commute system deleted successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute system not found"
                    }
                }
            }
        },
        "/expenses/commute/history": {
            "get": {
                "summary": "Get all commute history",
                "description": "Get all commute history",
                "tags": ["commute history"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Commute history id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Filter by account id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseCommuteHistory"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute history not found"
                    }
                }
            },
            "post": {
                "summary": "Create a new commute history",
                "description": "Create a new commute history",
                "tags": ["commute history"],
                "requestBody": {
                    "description": "Commute history object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommuteHistoryManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseCommuteHistory"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/expenses/commute/history/{id}": {
            "put": {
                "summary": "Update a commute history",
                "description": "Update a commute history",
                "tags": ["commute history"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commute history id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Commute history object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommuteHistoryManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseCommuteHistory"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute history not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a commute history",
                "description": "Delete a commute history",
                "tags": ["commute history"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commute history id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commute history deleted successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute history not found"
                    }
                }
            }
        },
        "/expenses/commute/fares": {
            "get": {
                "summary": "Get all commute fares",
                "description": "Get all commute fares",
                "tags": ["commute fares"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Commute fare id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseCommuteFares"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute fare not found"
                    }
                }
            },
            "post": {
                "summary": "Create a new commute fare",
                "description": "Create a new commute fare",
                "tags": ["commute fares"],
                "requestBody": {
                    "description": "Commute fare object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommuteFareManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseCommuteFares"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/expenses/commute/fares/{id}": {
            "put": {
                "summary": "Update a commute fare",
                "description": "Update a commute fare",
                "tags": ["commute fares"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commute fare id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Commute fare object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommuteFareManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseCommuteFares"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute fare not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a commute fare",
                "description": "Delete a commute fare",
                "tags": ["commute fares"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commute fare id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commute fare deleted successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute fare not found"
                    }
                }
            }
        },
        "/expenses/commute/tickets": {
            "get": {
                "summary": "Get all commute tickets",
                "description": "Get all commute tickets",
                "tags": ["commute tickets"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Commute ticket id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseCommuteTickets"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute ticket not found"
                    }
                }
            },
            "post": {
                "summary": "Create a new commute ticket",
                "description": "Create a new commute ticket",
                "tags": ["commute tickets"],
                "requestBody": {
                    "description": "Commute ticket object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommuteTicketManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseCommuteTickets"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/expenses/commute/tickets/{id}": {
            "put": {
                "summary": "Update a commute ticket",
                "description": "Update a commute ticket",
                "tags": ["commute tickets"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commute ticket id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Commute ticket object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommuteTicketManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseCommuteTickets"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute ticket not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a commute ticket",
                "description": "Delete a commute ticket",
                "tags": ["commute tickets"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commute ticket id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commute ticket deleted successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute ticket not found"
                    }
                }
            }
        },
        "/expenses/commute/schedule": {
            "get": {
                "summary": "Get all commute schedules",
                "description": "Get all commute schedules",
                "tags": ["commute schedules"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Commute schedule id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Filter by account id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseCommuteSchedule"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute schedule not found"
                    }
                }
            },
            "post": {
                "summary": "Create a new commute schedule",
                "description": "Create a new commute schedule",
                "tags": ["commute schedules"],
                "requestBody": {
                    "description": "Commute schedule object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommuteScheduleManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseCommuteSchedule"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/expenses/commute/schedule/{id}": {
            "put": {
                "summary": "Update a commute schedule",
                "description": "Update a commute schedule",
                "tags": ["commute schedules"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commute schedule id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Commute schedule object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommuteScheduleManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseCommuteSchedule"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute schedule not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a commute schedule",
                "description": "Delete a commute schedule",
                "tags": ["commute schedules"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commute schedule id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commute schedule deleted successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Commute schedule not found"
                    }
                }
            }
        },
        "/loans": {
            "get": {
                "summary": "Get all loans",
                "description": "Get all loans",
                "tags": ["loans"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Loan id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Filter by account id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseLoans"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Loan not found"
                    }
                }
            },
            "post": {
                "summary": "Create a loan",
                "description": "Create a loan",
                "tags": ["loans"],
                "requestBody": {
                    "description": "Loans object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoanManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseLoans"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/loans/{id}": {
            "put": {
                "summary": "Update a loan",
                "description": "Update a loan",
                "tags": ["loans"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Loan id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Loans object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoanManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseLoans"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Loan not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a loan",
                "description": "Delete a loan",
                "tags": ["loans"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Loan id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loan deleted successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Loan not found"
                    }
                }
            }
        },
        "/payroll": {
            "get": {
                "summary": "Get all payrolls",
                "description": "Get all payrolls",
                "tags": ["payroll"],
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponsePayroll"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "No payrolls for employee or not found"
                    }
                }
            }
        },
        "/payroll/taxes": {
            "get": {
                "summary": "Get all payroll taxes",
                "description": "Get all payroll taxes",
                "tags": ["payroll taxes"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Tax id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponsePayrollTaxes"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Payroll tax not found"
                    }
                }
            },
            "post": {
                "summary": "Create a payroll tax",
                "description": "Create a payroll tax",
                "tags": ["payroll taxes"],
                "requestBody": {
                    "description": "Payroll tax object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayrollTaxManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponsePayrollTaxes"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/payroll/taxes/{id}": {
            "put": {
                "summary": "Update a payroll tax",
                "description": "Update a payroll tax",
                "tags": ["payroll taxes"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payroll tax id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Payroll tax object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayrollTaxManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponsePayrollTaxes"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Payroll tax not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a payroll tax",
                "description": "Delete a payroll tax",
                "tags": ["payroll taxes"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payroll tax id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted payroll tax"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Payroll tax not found"
                    }
                }
            }
        },
        "/payroll/dates/": {
            "get": {
                "summary": "Get all payroll dates",
                "description": "Get all payroll dates",
                "tags": ["payroll dates"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Payroll date id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponsePayrollDates"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Payroll date not found"
                    }
                }
            },
            "post": {
                "summary": "Create a payroll date",
                "description": "Create a payroll date",
                "tags": ["payroll dates"],
                "requestBody": {
                    "description": "Payroll date object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayrollDateManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponsePayrollDates"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/payroll/dates/{id}": {
            "put": {
                "summary": "Update a payroll date",
                "description": "Update a payroll date",
                "tags": ["payroll dates"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payroll date id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Payroll date object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayrollDateManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponsePayrollDates"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Payroll date not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a payroll date",
                "description": "Delete a payroll date",
                "tags": ["payroll dates"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payroll date id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted payroll date"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Payroll date not found"
                    }
                }
            }
        },
        "/payroll/employee/": {
            "get": {
                "summary": "Get all payroll employees",
                "description": "Get all payroll employees",
                "tags": ["payroll employees"],
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponsePayrollEmployees"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                }
            },
            "post": {
                "summary": "Create a payroll employee",
                "description": "Create a payroll employee",
                "tags": ["payroll employees"],
                "requestBody": {
                    "description": "Payroll employee object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayrollEmployeeManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponsePayrollEmployees"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/payroll/employee/{id}": {
            "put": {
                "summary": "Update a payroll employee",
                "description": "Update a payroll employee",
                "tags": ["payroll employees"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Payroll employee object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayrollEmployeeManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponsePayrollEmployees"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a payroll employee",
                "description": "Delete a payroll employee",
                "tags": ["payroll employees"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted employee"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                }
            }
        },
        "/wishlists": {
            "get": {
                "summary": "Get a list of wishlists",
                "description": "Get a list of wishlists",
                "tags": ["wishlists"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Wishlist id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Account id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseWishlists"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Wishlist not found"
                    }
                }
            },
            "post": {
                "summary": "Create a wishlist",
                "description": "Create a wishlist",
                "tags": ["wishlists"],
                "requestBody": {
                    "description": "Wishlists object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WishlistManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseWishlists"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/wishlists/{id}": {
            "put": {
                "summary": "Update a wishlist",
                "description": "Update a wishlist",
                "tags": ["wishlists"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Wishlist id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Wishlists object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WishlistManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseWishlists"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Wishlist not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a wishlist",
                "description": "Delete a wishlist",
                "tags": ["wishlists"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Wishlist id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted wishlist item"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Wishlist not found"
                    }
                }
            }
        },
        "/transfers": {
            "get": {
                "summary": "Get a list of transfers",
                "description": "Get a list of transfers",
                "tags": ["transfers"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Transfer id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Account id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseTransfers"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Transfer not found"
                    }
                }
            },
            "post": {
                "summary": "Create a new transfer",
                "description": "Create a new transfer",
                "tags": ["transfers"],
                "requestBody": {
                    "description": "Transfers object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessResponseTransfers"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/transfers/{id}": {
            "put": {
                "summary": "Update a transfer",
                "description": "Update a transfer",
                "tags": ["transfers"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transfer id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Transfers object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferManipulation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessResponseTransfers"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Transfer not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a transfer",
                "description": "Delete a transfer",
                "tags": ["transfers"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transfer id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transfer deleted successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Transfer not found"
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "summary": "Get all transactions",
                "description": "Get all transactions",
                "tags": ["transactions"],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Account id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "End date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A JSON array of all transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "account_id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": 1
                                        },
                                        "current_balance": {
                                            "type": "number",
                                            "format": "double",
                                            "example": 1850.0
                                        },
                                        "transactions": {
                                            "type": "array",
                                            "items": {
                                                "oneOf": [
                                                    {
                                                        "$ref": "#/components/schemas/transaction"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/ExpenseTransaction"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/LoanTransaction"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountManipulation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Checking"
                    },
                    "type": {
                        "type": "integer",
                        "example": 0
                    },
                    "balance": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0
                    }
                }
            },
            "TaxManipulation": {
                "type": "object",
                "properties": {
                    "rate": {
                        "type": "number",
                        "format": "double",
                        "example": 0.08875
                    },
                    "title": {
                        "type": "string",
                        "example": "NY Sales Tax"
                    },
                    "description": {
                        "type": "string",
                        "example": "New York Sales Tax"
                    },
                    "type": {
                        "type": "integer",
                        "example": 0
                    }
                }
            },
            "TransactionManipulation": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0
                    },
                    "tax": {
                        "type": "number",
                        "format": "double",
                        "example": 0.08875
                    },
                    "title": {
                        "type": "string",
                        "example": "Transaction test"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a transaction test"
                    }
                }
            },
            "IncomeManipulation": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "example": 250.0
                    },
                    "title": {
                        "type": "string",
                        "example": "Income test"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a income test"
                    },
                    "frequency_type": {
                        "type": "integer",
                        "example": 2
                    },
                    "frequency_type_variable": {
                        "type": "integer",
                        "example": 1
                    },
                    "begin_date": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ExpenseManipulation": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "example": 250.0
                    },
                    "title": {
                        "type": "string",
                        "example": "Expense test"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a expense test"
                    },
                    "frequency_type": {
                        "type": "integer",
                        "example": 2
                    },
                    "frequency_type_variable": {
                        "type": "integer",
                        "example": 1
                    },
                    "subsidized": {
                        "type": "number",
                        "format": "double",
                        "example": 0.15
                    },
                    "begin_date": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "LoanManipulation": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "example": 2000.0
                    },
                    "plan_amount": {
                        "type": "number",
                        "format": "double",
                        "example": 300.0
                    },
                    "recipient": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "title": {
                        "type": "string",
                        "example": "Loan test"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a loan test"
                    },
                    "frequency_type": {
                        "type": "integer",
                        "example": 2
                    },
                    "frequency_type_variable": {
                        "type": "integer",
                        "example": 1
                    },
                    "interest_rate": {
                        "type": "number",
                        "format": "double",
                        "example": 0.15
                    },
                    "interest_frequency_type": {
                        "type": "integer",
                        "example": 2
                    },
                    "subsidized": {
                        "type": "number",
                        "format": "double",
                        "example": 0.15
                    },
                    "begin_date": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PayrollTaxManipulation": {
                "type": "object",
                "properties": {
                    "employee_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Federal Income Tax"
                    },
                    "rate": {
                        "type": "number",
                        "format": "double",
                        "example": 0.15
                    }
                }
            },
            "PayrollDateManipulation": {
                "type": "object",
                "properties": {
                    "employee_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "start_day": {
                        "type": "integer",
                        "example": 1,
                        "minimum": 1,
                        "maximum": 31
                    },
                    "end_day": {
                        "type": "integer",
                        "example": 31,
                        "minimum": 1,
                        "maximum": 31
                    }
                }
            },
            "PayrollEmployeeManipulation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "hourly_rate": {
                        "type": "number",
                        "format": "double",
                        "example": 15.0
                    },
                    "regular_hours": {
                        "type": "number",
                        "format": "double",
                        "example": 8.0
                    },
                    "vacation_days": {
                        "type": "integer",
                        "example": 10
                    },
                    "sick_days": {
                        "type": "integer",
                        "example": 10
                    },
                    "work_schedule": {
                        "type": "string",
                        "example": "0111110"
                    }
                }
            },
            "WishlistManipulation": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "example": 250.0
                    },
                    "title": {
                        "type": "string",
                        "example": "Wishlist test"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a wishlist test"
                    },
                    "priority": {
                        "type": "integer",
                        "example": 1
                    },
                    "url_link": {
                        "type": "string",
                        "example": "https://www.amazon.com/PlayStation-4-Pro-1TB-Console/dp/B01LOP8EZC/ref=sr_1_1?keywords=ps4&qid=1562678603&s=gateway&sr=8-1"
                    }
                }
            },
            "TransferManipulation": {
                "type": "object",
                "properties": {
                    "source_account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "destination_account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "example": 2
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "example": 100.0
                    },
                    "title": {
                        "type": "string",
                        "example": "Transfer test"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a transfer test"
                    },
                    "frequency_type": {
                        "type": "integer",
                        "example": 2
                    },
                    "frequency_type_variable": {
                        "type": "integer",
                        "example": 1
                    },
                    "begin_date": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "transaction": {
                "type": "object",
                "properties": {
                    "transaction_id": {
                        "type": "integer",
                        "description": "ID of the transaction transaction"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the transaction occurred"
                    },
                    "date_modified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the transaction was last modified"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the transaction"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Amount of the transaction"
                    },
                    "balance": {
                        "type": "number",
                        "description": "Balance after the transaction"
                    }
                }
            },
            "CommuteSystemManipulation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Metro North"
                    },
                    "fare_cap": {
                        "type": "number",
                        "format": "double",
                        "example": null
                    },
                    "fare_cap_duration": {
                        "type": "integer",
                        "example": null
                    }
                }
            },
            "CommuteTicketManipulation": {
                "type": "object",
                "properties": {
                    "fare_detail_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                }
            },
            "CommuteHistoryManipulation": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "fare_amount": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0
                    },
                    "commute_system": {
                        "type": "string",
                        "example": "OMNY"
                    },
                    "fare_type": {
                        "type": "string",
                        "example": "Standard"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CommuteFareManipulation": {
                "type": "object",
                "properties": {
                    "commute_system_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Off-Peak"
                    },
                    "fare_amount": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0
                    },
                    "fare_type": {
                        "type": "string",
                        "example": "Standard"
                    },
                    "begin_in_effect_day_of_week": {
                        "type": "integer",
                        "example": 1
                    },
                    "begin_in_effect_time": {
                        "type": "string",
                        "pattern": "05:00:00"
                    },
                    "end_in_effect_day_of_week": {
                        "type": "integer",
                        "example": 1
                    },
                    "end_in_effect_time": {
                        "type": "string",
                        "pattern": "10:00:00"
                    },
                    "alternate_fare_detail_id": {
                        "type": "integer",
                        "example": null
                    }
                }
            },
            "CommuteScheduleManipulation": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "day_of_week": {
                        "type": "integer",
                        "example": 1
                    },
                    "commute_ticket_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    "start_time": {
                        "type": "string",
                        "example": "05:00:00"
                    },
                    "duration": {
                        "type": "integer",
                        "example": 60
                    }
                }
            },
            "ExpenseTransaction": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title of the expense"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the expense"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the expense occurred"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Amount of the expense"
                    },
                    "balance": {
                        "type": "number",
                        "description": "Balance after the expense"
                    }
                }
            },
            "LoanTransaction": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title of the loan"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the loan"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the loan occurred"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Amount of the loan"
                    },
                    "balance": {
                        "type": "number",
                        "description": "Balance after the loan"
                    }
                }
            }
        },
        "responses": {
            "BadRequest": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "msg": {
                                                "type": "string",
                                                "description": "Error message"
                                            },
                                            "param": {
                                                "type": "string",
                                                "description": "Parameter that caused the error"
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "Location of the error"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseAccounts": {
                "description": "A JSON array of accounts",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "account_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "account_name": {
                                        "type": "string",
                                        "example": "Checking"
                                    },
                                    "account_type": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "account_balance": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 1000.0
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseTaxes": {
                "description": "A JSON array of taxes",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tax_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "tax_name": {
                                        "type": "string",
                                        "example": "NY Sales Tax"
                                    },
                                    "tax_rate": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 0.08875
                                    },
                                    "tax_type": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseTransactions": {
                "description": "A JSON array of transactions",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "transaction_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "account_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "transaction_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 1000.0
                                    },
                                    "transaction_tax": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 0.08875
                                    },
                                    "transaction_title": {
                                        "type": "string",
                                        "example": "Transaction test"
                                    },
                                    "transaction_description": {
                                        "type": "string",
                                        "example": "This is a transaction test"
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseIncome": {
                "description": "A JSON array of income",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "income_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "account_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "income_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 1000.0
                                    },
                                    "income_title": {
                                        "type": "string",
                                        "example": "Income test"
                                    },
                                    "income_description": {
                                        "type": "string",
                                        "example": "This is a income test"
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseCommuteExpenses": {
                "description": "A JSON array of commute expenses",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "total_cost_per_week": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 100.0
                                },
                                "total_cost_per_month": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 400.0
                                },
                                "systems": {
                                    "type": "object",
                                    "properties": {
                                        "OMNY": {
                                            "type": "object",
                                            "properties": {
                                                "total_cost_per_week": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "example": 50.0
                                                },
                                                "total_cost_per_month": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "example": 200.0
                                                },
                                                "rides": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "fare_cap_progress": {
                                                    "type": "object",
                                                    "properties": {
                                                        "current_spent": {
                                                            "type": "number",
                                                            "format": "double",
                                                            "example": 10.0
                                                        },
                                                        "fare_cap": {
                                                            "type": "number",
                                                            "format": "double",
                                                            "example": 33.0
                                                        },
                                                        "potential_savings": {
                                                            "type": "number",
                                                            "format": "double",
                                                            "example": 5.0
                                                        },
                                                        "cap_duration": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseCommuteSystems": {
                "description": "A JSON array of commute systems",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "commute_system_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Subway"
                                    },
                                    "fare_cap": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 33.0
                                    },
                                    "fare_cap_duration": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseCommuteHistory": {
                "description": "A JSON array of commute history",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "commute_history_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "account_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "commute_system": {
                                        "type": "string",
                                        "example": "Subway"
                                    },
                                    "fare_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 2.75
                                    },
                                    "fare_type": {
                                        "type": "string",
                                        "example": "Standard"
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseCommuteFares": {
                "description": "A JSON array of commute fares",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "fares": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "fare_detail_id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "minimum": 1
                                            },
                                            "commute_system": {
                                                "type": "object",
                                                "properties": {
                                                    "commute_system_id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "minimum": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Subway"
                                                    }
                                                }
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Off-Peak"
                                            },
                                            "fare_amount": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 10.0
                                            },
                                            "begin_in_effect": {
                                                "type": "object",
                                                "properties": {
                                                    "day_of_week": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "time": {
                                                        "type": "string",
                                                        "pattern": "05:00:00"
                                                    }
                                                }
                                            },
                                            "end_in_effect": {
                                                "type": "object",
                                                "properties": {
                                                    "day_of_week": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "time": {
                                                        "type": "string",
                                                        "pattern": "10:00:00"
                                                    }
                                                }
                                            },
                                            "alternate_fare_detail_id": {
                                                "type": "integer",
                                                "example": null
                                            },
                                            "date_created": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "date_modified": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseCommuteTickets": {
                "description": "A JSON array of commute fares",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "commute_ticket_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "fare_detail_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseCommuteSchedule": {
                "description": "A JSON array of schedules",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "schedule": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "day_of_week": {
                                                "type": "integer",
                                                "format": "int64",
                                                "minimum": 1
                                            },
                                            "passes": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "LIRR Monthly"
                                                        },
                                                        "start_time": {
                                                            "type": "string",
                                                            "example": "05:00:00"
                                                        },
                                                        "duration": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "fare_amount": {
                                                            "type": "number",
                                                            "format": "double",
                                                            "example": 10.0
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseExpenses": {
                "description": "A JSON array of expenses",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "expense_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "account_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "expense_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 250.0
                                    },
                                    "expense_title": {
                                        "type": "string",
                                        "example": "Expense test"
                                    },
                                    "expense_description": {
                                        "type": "string",
                                        "example": "This is a expense test"
                                    },
                                    "frequency_type": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "frequency_type_variable": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "frequency_day_of_month": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "frequency_day_of_week": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "frequency_week_of_month": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "frequency_month_of_year": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "expense_subsidized": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 0.15
                                    },
                                    "expense_begin_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "expense_end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "default": null
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseLoans": {
                "description": "A JSON array of loans",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "loan_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "account_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "loan_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 250.0
                                    },
                                    "loan_title": {
                                        "type": "string",
                                        "example": "Loan test"
                                    },
                                    "loan_description": {
                                        "type": "string",
                                        "example": "This is a loan test"
                                    },
                                    "frequency_type": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "frequency_type_variable": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "frequency_day_of_month": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "frequency_day_of_week": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "frequency_week_of_month": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "frequency_month_of_year": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "loan_interest_rate": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 0.15
                                    },
                                    "loan_interest_frequency_type": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "loan_subsidized": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 0.15
                                    },
                                    "loan_fully_paid_back": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "loan_begin_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "loan_end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "default": null
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponsePayroll": {
                "description": "A JSON array of payrolls",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "employee_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1
                                },
                                "payrolls": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start_date": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "end_date": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "work_days": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "gross_pay": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 250.0
                                            },
                                            "net_pay": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 200.49
                                            },
                                            "hours_worked": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 40.0
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponsePayrollTaxes": {
                "description": "A JSON array of payroll taxes",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "payroll_taxes_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1
                                },
                                "employee_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Payroll tax test"
                                },
                                "rate": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 250.0
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponsePayrollDates": {
                "description": "A JSON array of payroll dates",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "payroll_dates_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1
                                },
                                "employee_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1
                                },
                                "payroll_start_day": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "payroll_end_day": {
                                    "type": "integer",
                                    "example": 15
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponsePayrollEmployees": {
                "description": "A JSON array of payroll employees",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "employee_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Employee test"
                                },
                                "hourly_rate": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 16.0
                                },
                                "regular_hours": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 8.0
                                },
                                "vacation_days": {
                                    "type": "integer",
                                    "example": 5
                                },
                                "sick_days": {
                                    "type": "integer",
                                    "example": 5
                                },
                                "work_schedule": {
                                    "type": "string",
                                    "example": "0111110"
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseWishlists": {
                "description": "A JSON array of wishlists",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "wishlist_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "account_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "wishlist_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 250.0
                                    },
                                    "wishlist_title": {
                                        "type": "string",
                                        "example": "Wishlist test"
                                    },
                                    "wishlist_description": {
                                        "type": "string",
                                        "example": "This is a wishlist test"
                                    },
                                    "wishlist_priority": {
                                        "type": "integer"
                                    },
                                    "wishlist_url_link": {
                                        "type": "string",
                                        "example": "https://www.amazon.com"
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessResponseTransfers": {
                "description": "A JSON array of transfers",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "transfer_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "account_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1
                                    },
                                    "transfer_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 250.0
                                    },
                                    "transfer_title": {
                                        "type": "string",
                                        "example": "Transfer test"
                                    },
                                    "transfer_description": {
                                        "type": "string",
                                        "example": "This is a transfer test"
                                    },
                                    "frequency_type": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "frequency_type_variable": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "frequency_day_of_month": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "frequency_day_of_week": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "frequency_week_of_month": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "frequency_month_of_year": {
                                        "type": "integer",
                                        "default": null
                                    },
                                    "transfer_begin_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "transfer_end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "default": null
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
