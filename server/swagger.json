{
  "openapi": "3.0.0",
  "info": {
    "title": "Budgeting",
    "description": "A budgeting app that generates future transactions based on expenses, loans, current balance, and income",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/",
      "description": "Development server"
    }
  ],
  "paths": {
    "/accounts": {
      "get": {
        "summary": "Get one account",
        "description": "Get one account",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Filter by account id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "account_name": {
                        "type": "string"
                      },
                      "account_type": {
                        "type": "integer"
                      },
                      "account_balance": {
                        "type": "number",
                        "format": "double"
                      },
                      "date_created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "date_modified": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new account",
        "description": "Create a new account",
        "tags": [
          "accounts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "integer"
                  },
                  "balance": {
                    "type": "number",
                    "format": "double"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A JSON object of the created account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "account_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "account_name": {
                      "type": "string"
                    },
                    "account_type": {
                      "type": "integer"
                    },
                    "account_balance": {
                      "type": "number",
                      "format": "double"
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}": {
      "put": {
        "summary": "Update an account",
        "description": "Update an account",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Edit by account id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "integer"
                  },
                  "balance": {
                    "type": "number",
                    "format": "double"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A message that the account was updated",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Account modified with ID: 1"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an account",
        "description": "Delete an account",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Delete by account id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A message that the account was deleted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Account deleted with ID: 1"
                }
              }
            }
          }
        }
      }
    },
    "/deposits/{account_id}": {
      "get": {
        "summary": "Get all deposits by account",
        "description": "Get all deposits by account",
        "tags": [
          "deposits"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Filter by account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by deposit id",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of deposits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "deposit_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "deposit_amount": {
                        "type": "number",
                        "format": "double"
                      },
                      "date_created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "date_modified": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposits": {
      "post": {
        "summary": "Create a new deposit",
        "description": "Create a new deposit",
        "tags": [
          "deposits"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "description": {
                    "type": "string",
                    "example": "Deposit test"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A JSON object of the created deposit",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deposit_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "account_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "deposit_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposits/{id}": {
      "put": {
        "summary": "Update a deposit",
        "description": "Update a deposit",
        "tags": [
          "deposits"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deposit id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "description": {
                    "type": "string",
                    "example": "Deposit test"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A JSON object of the updated deposit",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deposit_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "account_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "deposit_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a deposit",
        "description": "Delete a deposit",
        "tags": [
          "deposits"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deposit id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/withdrawals/{account_id}": {
      "get": {
        "summary": "Get all withdrawals by account",
        "description": "Get all withdrawals by account",
        "tags": [
          "withdrawals"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Filter by account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by withdrawal id",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of withdrawals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "withdrawal_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "withdrawal_amount": {
                        "type": "number",
                        "format": "double"
                      },
                      "date_created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "date_modified": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdrawals": {
      "post": {
        "summary": "Create a new withdrawal",
        "description": "Create a new withdrawal",
        "tags": [
          "withdrawals"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "description": {
                    "type": "string",
                    "example": "Withdrawal test"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A JSON object of the created withdrawal",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "withdrawal_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "account_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "withdrawal_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdrawals/{id}": {
      "put": {
        "summary": "Update a withdrawal",
        "description": "Update a withdrawal",
        "tags": [
          "withdrawals"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Withdrawal id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "description": {
                    "type": "string",
                    "example": "Withdrawal test"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A JSON object of the updated withdrawal",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "withdrawal_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "account_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "withdrawal_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a withdrawal",
        "description": "Delete a withdrawal",
        "tags": [
          "withdrawals"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Withdrawal id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/expenses/{account_id}": {
      "get": {
        "summary": "Get all expenses by account",
        "description": "Get all expenses by account",
        "tags": [
          "expenses"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Filter by account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by expense id",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of expenses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "expense_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "expense_amount": {
                        "type": "number",
                        "format": "double"
                      },
                      "date_created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "date_modified": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/expenses": {
      "post": {
        "summary": "Create a new expense",
        "description": "Create a new expense",
        "tags": [
          "expenses"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "title": {
                    "type": "string",
                    "example": "Expense test"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is a expense test"
                  },
                  "frequency_type": {
                    "type": "integer",
                    "example": 2
                  },
                  "frequency_type_variable": {
                    "type": "integer",
                    "example": 1
                  },
                  "frequency_day_of_month": {
                    "type": "integer",
                    "example": 16
                  },
                  "frequency_day_of_week": {
                    "type": "integer",
                    "example": 2
                  },
                  "frequency_week_of_month": {
                    "type": "integer",
                    "example": 0
                  },
                  "frequency_month_of_year": {
                    "type": "integer",
                    "example": 0
                  },
                  "begin_date": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A JSON object of the created expense",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expense_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "account_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "expense_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/expenses/{id}": {
      "put": {
        "summary": "Update an expense",
        "description": "Update an expense",
        "tags": [
          "expenses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "title": {
                    "type": "string",
                    "example": "Expense test"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is a expense test"
                  },
                  "frequency_type": {
                    "type": "integer",
                    "example": 2
                  },
                  "frequency_type_variable": {
                    "type": "integer",
                    "example": 1
                  },
                  "frequency_day_of_month": {
                    "type": "integer",
                    "example": 16
                  },
                  "frequency_day_of_week": {
                    "type": "integer",
                    "example": 2
                  },
                  "frequency_week_of_month": {
                    "type": "integer",
                    "example": 0
                  },
                  "frequency_month_of_year": {
                    "type": "integer",
                    "example": 0
                  },
                  "begin_date": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A JSON object of the updated expense",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expense_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "account_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "expense_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an expense",
        "description": "Delete an expense",
        "tags": [
          "expenses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/loans/{account_id}": {
      "get": {
        "summary": "Get all loans",
        "description": "Get all loans",
        "tags": [
          "loans"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Loan id",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of loans",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "loan_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "loan_amount": {
                        "type": "number",
                        "format": "double"
                      },
                      "date_created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "date_modified": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/loans": {
      "post": {
        "summary": "Create a loan",
        "description": "Create a loan",
        "tags": [
          "loans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "plan_amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "recipient": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "title": {
                    "type": "string",
                    "example": "Loan test"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is a loan test"
                  },
                  "frequency_type": {
                    "type": "integer",
                    "example": 2
                  },
                  "frequency_type_variable": {
                    "type": "integer",
                    "example": 1
                  },
                  "frequency_day_of_month": {
                    "type": "integer",
                    "example": 16
                  },
                  "frequency_day_of_week": {
                    "type": "integer",
                    "example": 2
                  },
                  "frequency_week_of_month": {
                    "type": "integer",
                    "example": 0
                  },
                  "frequency_month_of_year": {
                    "type": "integer",
                    "example": 0
                  },
                  "begin_date": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A JSON object of the created loan",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "loan_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "account_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "loan_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/loans/{id}": {
      "put": {
        "summary": "Update a loan",
        "description": "Update a loan",
        "tags": [
          "loans"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Loan id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "plan_amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "recipient": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "title": {
                    "type": "string",
                    "example": "Loan test"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is a loan test"
                  },
                  "frequency_type": {
                    "type": "integer",
                    "example": 2
                  },
                  "frequency_type_variable": {
                    "type": "integer",
                    "example": 1
                  },
                  "frequency_day_of_month": {
                    "type": "integer",
                    "example": 16
                  },
                  "frequency_day_of_week": {
                    "type": "integer",
                    "example": 2
                  },
                  "frequency_week_of_month": {
                    "type": "integer",
                    "example": 0
                  },
                  "frequency_month_of_year": {
                    "type": "integer",
                    "example": 0
                  },
                  "begin_date": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A JSON object of the updated loan",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "loan_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "account_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "loan_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a loan",
        "description": "Delete a loan",
        "tags": [
          "loans"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Loan id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/wishlists/{account_id}": {
      "get": {
        "summary": "Get a list of wishlists",
        "description": "Get a list of wishlists",
        "tags": [
          "wishlists"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of wishlists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "wishlist_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "account_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "title": {
                        "type": "string",
                        "example": "Wishlist test"
                      },
                      "description": {
                        "type": "string",
                        "example": "This is a wishlist test"
                      },
                      "date_created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "date_modified": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}