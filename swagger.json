{
  "openapi": "3.0.0",
  "info": {
    "title": "Budgeting",
    "description": "A budgeting app that generates future transactions based on expenses, loans, current balance, and income",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:5001/api/",
      "description": "Development server"
    }
  ],
  "paths": {
    "/accounts": {
      "get": {
        "summary": "Get one account",
        "description": "Get one account",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Filter by account id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseAccounts"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "post": {
        "summary": "Create a new account",
        "description": "Create a new account",
        "tags": [
          "accounts"
        ],
        "requestBody": {
          "description": "Account object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountManipulation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SuccessResponseAccounts"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/accounts/{id}": {
      "put": {
        "summary": "Update an account",
        "description": "Update an account",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Edit by account id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Account object to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountManipulation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseAccounts"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete an account",
        "description": "Delete an account",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Delete by account id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/transaction/{account_id}": {
      "get": {
        "summary": "Get all transactions by account",
        "description": "Get all transactions by account",
        "tags": [
          "transaction"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Filter by account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by transaction id",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseTransactions"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/transaction": {
      "post": {
        "summary": "Create a new transaction",
        "description": "Create a new transaction",
        "tags": [
          "transaction"
        ],
        "requestBody": {
          "description": "transaction object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionManipulation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SuccessResponseTransactions"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/transaction/{id}": {
      "put": {
        "summary": "Update a transaction",
        "description": "Update a transaction",
        "tags": [
          "transaction"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "transaction object to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionManipulation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseTransactions"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete a transaction",
        "description": "Delete a transaction",
        "tags": [
          "transaction"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/expenses/{account_id}": {
      "get": {
        "summary": "Get all expenses by account",
        "description": "Get all expenses by account",
        "tags": [
          "expenses"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Filter by account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by expense id",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseExpenses"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/expenses": {
      "post": {
        "summary": "Create a new expense",
        "description": "Create a new expense",
        "tags": [
          "expenses"
        ],
        "requestBody": {
          "description": "Expenses object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseManipulation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SuccessResponseExpenses"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "put": {
        "summary": "Update an expense",
        "description": "Update an expense",
        "tags": [
          "expenses"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Expense id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Expenses object to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseManipulation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseExpenses"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete an expense",
        "description": "Delete an expense",
        "tags": [
          "expenses"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Expense id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expense deleted successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/loans/{account_id}": {
      "get": {
        "summary": "Get all loans",
        "description": "Get all loans",
        "tags": [
          "loans"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Loan id",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseLoans"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/loans": {
      "post": {
        "summary": "Create a loan",
        "description": "Create a loan",
        "tags": [
          "loans"
        ],
        "requestBody": {
          "description": "Loans object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanManipulation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SuccessResponseLoans"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "put": {
        "summary": "Update a loan",
        "description": "Update a loan",
        "tags": [
          "loans"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Loan id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Loans object to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanManipulation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseLoans"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete a loan",
        "description": "Delete a loan",
        "tags": [
          "loans"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Loan id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loan deleted successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/payroll": {
      "get": {
        "summary": "Get all payrolls",
        "description": "Get all payrolls",
        "tags": [
          "payroll"
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "query",
            "description": "Employee id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponsePayroll"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/payroll/taxes/{employee_id}": {
      "get": {
        "summary": "Get all payroll taxes",
        "description": "Get all payroll taxes",
        "tags": [
          "payroll taxes"
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "Employee id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Tax id",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponsePayrollTaxes"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/payroll/taxes": {
      "post": {
        "summary": "Create a payroll tax",
        "description": "Create a payroll tax",
        "tags": [
          "payroll taxes"
        ],
        "requestBody": {
          "description": "Payroll tax object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollTaxManipulation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SuccessResponsePayrollTaxes"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "put": {
        "summary": "Update a payroll tax",
        "description": "Update a payroll tax",
        "tags": [
          "payroll taxes"
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "query",
            "description": "Employee id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Payroll tax id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Payroll tax object to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollTaxManipulation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponsePayrollTaxes"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/payroll/taxes/{id}": {
      "delete": {
        "summary": "Delete a payroll tax",
        "description": "Delete a payroll tax",
        "tags": [
          "payroll taxes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payroll tax id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/payroll/dates/{employee_id}": {
      "get": {
        "summary": "Get all payroll dates",
        "description": "Get all payroll dates",
        "tags": [
          "payroll dates"
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "Employee id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Payroll date id",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponsePayrollDates"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/payroll/dates/": {
      "post": {
        "summary": "Create a payroll date",
        "description": "Create a payroll date",
        "tags": [
          "payroll dates"
        ],
        "requestBody": {
          "description": "Payroll date object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollDateManipulation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SuccessResponsePayrollDates"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/payroll/dates/{id}": {
      "put": {
        "summary": "Update a payroll date",
        "description": "Update a payroll date",
        "tags": [
          "payroll dates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payroll date id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Payroll date object to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollDateManipulation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponsePayrollDates"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete a payroll date",
        "description": "Delete a payroll date",
        "tags": [
          "payroll dates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payroll date id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/payroll/employee/": {
      "get": {
        "summary": "Get all payroll employees",
        "description": "Get all payroll employees",
        "tags": [
          "payroll employees"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Employee id",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponsePayrollEmployees"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "post": {
        "summary": "Create a payroll employee",
        "description": "Create a payroll employee",
        "tags": [
          "payroll employees"
        ],
        "requestBody": {
          "description": "Payroll employee object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollEmployeeManipulation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SuccessResponsePayrollEmployees"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/payroll/employee/{id}": {
      "put": {
        "summary": "Update a payroll employee",
        "description": "Update a payroll employee",
        "tags": [
          "payroll employees"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Employee id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Payroll employee object to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollEmployeeManipulation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponsePayrollEmployees"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete a payroll employee",
        "description": "Delete a payroll employee",
        "tags": [
          "payroll employees"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Employee id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/wishlists/{account_id}": {
      "get": {
        "summary": "Get a list of wishlists",
        "description": "Get a list of wishlists",
        "tags": [
          "wishlists"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseWishlists"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/wishlists": {
      "post": {
        "summary": "Create a wishlist",
        "description": "Create a wishlist",
        "tags": [
          "wishlists"
        ],
        "requestBody": {
          "description": "Wishlists object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WishlistManipulation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SuccessResponseWishlists"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/wishlists/{id}": {
      "put": {
        "summary": "Update a wishlist",
        "description": "Update a wishlist",
        "tags": [
          "wishlists"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Wishlist id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Wishlists object to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WishlistManipulation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseWishlists"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete a wishlist",
        "description": "Delete a wishlist",
        "tags": [
          "wishlists"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Wishlist id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/transfers/{account_id}": {
      "get": {
        "summary": "Get a list of transfers",
        "description": "Get a list of transfers",
        "tags": [
          "transfers"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Transfer id",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseTransfers"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/transfers": {
      "post": {
        "summary": "Create a new transfer",
        "description": "Create a new transfer",
        "tags": [
          "transfers"
        ],
        "requestBody": {
          "description": "Transfers object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferManipulation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SuccessResponseTransfers"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "put": {
        "summary": "Update a transfer",
        "description": "Update a transfer",
        "tags": [
          "transfers"
        ],
        "parameters": [
          {
            "name": "source_account_id",
            "in": "query",
            "description": "Source account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Transfer id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Transfers object to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferManipulation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponseTransfers"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete a transfer",
        "description": "Delete a transfer",
        "tags": [
          "transfers"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Transfer id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "summary": "Get all transactions",
        "description": "Get all transactions",
        "tags": [
          "transactions"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Start date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "End date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of all transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "account_id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 1
                    },
                    "current_balance": {
                      "type": "number",
                      "format": "double",
                      "example": 1850.00
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/transaction"
                          },
                          {
                            "$ref": "#/components/schemas/ExpenseTransaction"
                          },
                          {
                            "$ref": "#/components/schemas/LoanTransaction"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "transaction": {
        "type": "object",
        "properties": {
          "transaction_id": {
            "type": "integer",
            "description": "ID of the transaction transaction"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date the transaction occurred"
          },
          "date_modified": {
            "type": "string",
            "format": "date-time",
            "description": "Date the transaction was last modified"
          },
          "description": {
            "type": "string",
            "description": "Description of the transaction"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the transaction"
          },
          "balance": {
            "type": "number",
            "description": "Balance after the transaction"
          }
        }
      },
      "ExpenseTransaction": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the expense"
          },
          "description": {
            "type": "string",
            "description": "Description of the expense"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date the expense occurred"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the expense"
          },
          "balance": {
            "type": "number",
            "description": "Balance after the expense"
          }
        }
      },
      "LoanTransaction": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the loan"
          },
          "description": {
            "type": "string",
            "description": "Description of the loan"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date the loan occurred"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the loan"
          },
          "balance": {
            "type": "number",
            "description": "Balance after the loan"
          }
        }
      },
      "AccountManipulation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Checking"
          },
          "type": {
            "type": "integer",
            "example": 0
          },
          "balance": {
            "type": "number",
            "format": "double",
            "example": 1000.00
          }
        }
      },
      "TransactionManipulation": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "amount": {
            "type": "number",
            "format": "double",
            "example": 1000.00
          },
          "description": {
            "type": "string",
            "example": "transaction test"
          }
        }
      },
      "WithdrawalManipulation": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "amount": {
            "type": "number",
            "format": "double",
            "example": 100.00
          },
          "description": {
            "type": "string",
            "example": "Withdrawal test"
          }
        }
      },
      "ExpenseManipulation": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "amount": {
            "type": "number",
            "format": "double",
            "example": 250.00
          },
          "title": {
            "type": "string",
            "example": "Expense test"
          },
          "description": {
            "type": "string",
            "example": "This is a expense test"
          },
          "frequency_type": {
            "type": "integer",
            "example": 2
          },
          "frequency_type_variable": {
            "type": "integer",
            "example": 1
          },
          "begin_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LoanManipulation": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "amount": {
            "type": "number",
            "format": "double",
            "example": 2000.00
          },
          "plan_amount": {
            "type": "number",
            "format": "double",
            "example": 300.00
          },
          "recipient": {
            "type": "string",
            "example": "John Doe"
          },
          "title": {
            "type": "string",
            "example": "Loan test"
          },
          "description": {
            "type": "string",
            "example": "This is a loan test"
          },
          "frequency_type": {
            "type": "integer",
            "example": 2
          },
          "frequency_type_variable": {
            "type": "integer",
            "example": 1
          },
          "begin_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PayrollTaxManipulation": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "example": "Federal Income Tax"
          },
          "rate": {
            "type": "number",
            "format": "double",
            "example": 0.15
          },
          "applies_to": {
            "type": "string",
            "example": "gross_salary"
          }
        }
      },
      "PayrollDateManipulation": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "start_day": {
            "type": "integer",
            "example": 1,
            "minimum": 1,
            "maximum": 31
          },
          "end_day": {
            "type": "integer",
            "example": 31,
            "minimum": 1,
            "maximum": 31
          }
        }
      },
      "PayrollEmployeeManipulation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "hourly_rate": {
            "type": "number",
            "format": "double",
            "example": 15.00
          },
          "regular_hours": {
            "type": "number",
            "format": "double",
            "example": 8.00
          },
          "vacation_days": {
            "type": "integer",
            "example": 10
          },
          "sick_days": {
            "type": "integer",
            "example": 10
          },
          "work_schedule": {
            "type": "string",
            "example": "0111110"
          }
        }
      },
      "WishlistManipulation": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "amount": {
            "type": "number",
            "format": "double",
            "example": 250.00
          },
          "title": {
            "type": "string",
            "example": "Wishlist test"
          },
          "description": {
            "type": "string",
            "example": "This is a wishlist test"
          },
          "priority": {
            "type": "integer",
            "example": 1
          },
          "url_link": {
            "type": "string",
            "example": "https://www.amazon.com/PlayStation-4-Pro-1TB-Console/dp/B01LOP8EZC/ref=sr_1_1?keywords=ps4&qid=1562678603&s=gateway&sr=8-1"
          }
        }
      },
      "TransferManipulation": {
        "type": "object",
        "properties": {
          "source_account_id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "destination_account_id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "example": 2
          },
          "amount": {
            "type": "number",
            "format": "double",
            "example": 100.00
          },
          "title": {
            "type": "string",
            "example": "Transfer test"
          },
          "description": {
            "type": "string",
            "example": "This is a transfer test"
          },
          "frequency_type": {
            "type": "integer",
            "example": 2
          },
          "frequency_type_variable": {
            "type": "integer",
            "example": 1
          },
          "begin_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "responses": {
      "SuccessResponseAccounts": {
        "description": "A JSON array of accounts",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "account_name": {
                    "type": "string",
                    "example": "Checking"
                  },
                  "account_type": {
                    "type": "integer",
                    "example": 0
                  },
                  "account_balance": {
                    "type": "number",
                    "format": "double",
                    "example": 1000.00
                  },
                  "date_created": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "date_modified": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "SuccessResponseTransactions": {
        "description": "A JSON array of transactions",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "transaction_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "transaction_amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1000.00
                  },
                  "date_created": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "date_modified": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "SuccessResponseExpenses": {
        "description": "A JSON array of expenses",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "expense_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "expense_amount": {
                    "type": "number",
                    "format": "double",
                    "example": 250.00
                  },
                  "expense_title": {
                    "type": "string",
                    "example": "Expense test"
                  },
                  "expense_description": {
                    "type": "string",
                    "example": "This is a expense test"
                  },
                  "frequency_type": {
                    "type": "integer",
                    "example": 2
                  },
                  "frequency_type_variable": {
                    "type": "integer",
                    "example": 1
                  },
                  "frequency_day_of_month": {
                    "type": "integer",
                    "default": null
                  },
                  "frequency_day_of_week": {
                    "type": "integer",
                    "default": null
                  },
                  "frequency_week_of_month": {
                    "type": "integer",
                    "default": null
                  },
                  "frequency_month_of_year": {
                    "type": "integer",
                    "default": null
                  },
                  "expense_begin_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "expense_end_date": {
                    "type": "string",
                    "format": "date-time",
                    "default": null
                  },
                  "date_created": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "date_modified": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "SuccessResponseLoans": {
        "description": "A JSON array of loans",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "loan_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "loan_amount": {
                    "type": "number",
                    "format": "double",
                    "example": 250.00
                  },
                  "loan_title": {
                    "type": "string",
                    "example": "Loan test"
                  },
                  "loan_description": {
                    "type": "string",
                    "example": "This is a loan test"
                  },
                  "frequency_type": {
                    "type": "integer",
                    "example": 2
                  },
                  "frequency_type_variable": {
                    "type": "integer",
                    "example": 1
                  },
                  "frequency_day_of_month": {
                    "type": "integer",
                    "default": null
                  },
                  "frequency_day_of_week": {
                    "type": "integer",
                    "default": null
                  },
                  "frequency_week_of_month": {
                    "type": "integer",
                    "default": null
                  },
                  "frequency_month_of_year": {
                    "type": "integer",
                    "default": null
                  },
                  "loan_begin_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "loan_end_date": {
                    "type": "string",
                    "format": "date-time",
                    "default": null
                  },
                  "date_created": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "date_modified": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "SuccessResponsePayroll": {
        "description": "A JSON array of payrolls",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "employee_id": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 1
                },
                "payrolls": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "start_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "end_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "work_days": {
                        "type": "integer",
                        "example": 5
                      },
                      "gross_pay": {
                        "type": "number",
                        "format": "double",
                        "example": 250.00
                      },
                      "net_pay": {
                        "type": "number",
                        "format": "double",
                        "example": 200.49
                      },
                      "hours_worked": {
                        "type": "number",
                        "format": "double",
                        "example": 40.00
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SuccessResponsePayrollTaxes": {
        "description": "A JSON array of payroll taxes",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "employee_id": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 1
                },
                "payroll_taxes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "payroll_taxes_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Payroll tax test"
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "example": 250.00
                      },
                      "applies_to": {
                        "type": "string",
                        "example": "gross_salary"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SuccessResponsePayrollDates": {
        "description": "A JSON array of payroll dates",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "employee_id": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 1
                },
                "payroll_dates": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "payroll_dates_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "payroll_start_day": {
                        "type": "integer",
                        "example": 1
                      },
                      "payroll_end_day": {
                        "type": "integer",
                        "example": 15
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SuccessResponsePayrollEmployees": {
        "description": "A JSON array of payroll employees",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "employee_id": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 1
                },
                "name": {
                  "type": "string",
                  "example": "Employee test"
                },
                "hourly_rate": {
                  "type": "number",
                  "format": "double",
                  "example": 16.00
                },
                "regular_hours": {
                  "type": "number",
                  "format": "double",
                  "example": 8.00
                },
                "vacation_days": {
                  "type": "integer",
                  "example": 5
                },
                "sick_days": {
                  "type": "integer",
                  "example": 5
                },
                "work_schedule": {
                  "type": "string",
                  "example": "0111110"
                }
              }
            }
          }
        }
      },
      "SuccessResponseWishlists": {
        "description": "A JSON array of wishlists",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "wishlist_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "wishlist_amount": {
                    "type": "number",
                    "format": "double",
                    "example": 250.00
                  },
                  "wishlist_title": {
                    "type": "string",
                    "example": "Wishlist test"
                  },
                  "wishlist_description": {
                    "type": "string",
                    "example": "This is a wishlist test"
                  },
                  "wishlist_priority": {
                    "type": "integer"
                  },
                  "wishlist_url_link": {
                    "type": "string",
                    "example": "https://www.amazon.com"
                  },
                  "date_created": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "date_modified": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "SuccessResponseTransfers": {
        "description": "A JSON array of transfers",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "transfer_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1
                  },
                  "transfer_amount": {
                    "type": "number",
                    "format": "double",
                    "example": 250.00
                  },
                  "transfer_title": {
                    "type": "string",
                    "example": "Transfer test"
                  },
                  "transfer_description": {
                    "type": "string",
                    "example": "This is a transfer test"
                  },
                  "frequency_type": {
                    "type": "integer",
                    "example": 2
                  },
                  "frequency_type_variable": {
                    "type": "integer",
                    "example": 1
                  },
                  "frequency_day_of_month": {
                    "type": "integer",
                    "default": null
                  },
                  "frequency_day_of_week": {
                    "type": "integer",
                    "default": null
                  },
                  "frequency_week_of_month": {
                    "type": "integer",
                    "default": null
                  },
                  "frequency_month_of_year": {
                    "type": "integer",
                    "default": null
                  },
                  "transfer_begin_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "transfer_end_date": {
                    "type": "string",
                    "format": "date-time",
                    "default": null
                  },
                  "date_created": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "date_modified": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "msg": {
                        "type": "string",
                        "description": "Error message"
                      },
                      "param": {
                        "type": "string",
                        "description": "Parameter that caused the error"
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}